[pytest]
# Pytest Configuration for Digital Garden Automation System

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests automation/tests

# Asyncio configuration
asyncio_mode = auto

# Coverage configuration
addopts =
    --verbose
    --strict-markers
    --cov=automation
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --html=test-reports/report.html
    --self-contained-html
    -ra
    --tb=short
    --maxfail=5

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    e2e: End-to-end tests with browser automation
    slow: Tests that take longer than 5 seconds
    api: Tests that require API keys and external services
    skip_ci: Tests to skip in CI environment
    perplexity: Tests requiring Perplexity API
    anthropic: Tests requiring Anthropic/Claude API
    whisper: Tests requiring Whisper model (large download)

# Timeout for tests
timeout = 300
timeout_method = thread

# Warning filters
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Logging
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Minimum coverage threshold (will fail if below)
[coverage:run]
source = automation,src
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */node_modules/*

[coverage:report]
precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov