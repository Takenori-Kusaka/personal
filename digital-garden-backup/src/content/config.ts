import { defineCollection, z } from 'astro:content';

// Schema for impact analysis
const impactSchema = z.object({
  businessValue: z.object({
    marketOpportunity: z.number().min(1).max(5),
    competitiveAdvantage: z.number().min(1).max(5),
    revenuePotential: z.number().min(1).max(5),
  }).optional(),
  implementationFeasibility: z.object({
    technicalComplexity: z.number().min(1).max(5),
    resourceRequirements: z.number().min(1).max(5),
    timelineEstimate: z.number().min(1).max(5),
  }).optional(),
  socialImpact: z.object({
    userBenefit: z.number().min(1).max(5),
    societalContribution: z.number().min(1).max(5),
    sustainability: z.number().min(1).max(5),
  }).optional(),
  strategicAlignment: z.object({
    visionFit: z.number().min(1).max(5),
    skillDevelopment: z.number().min(1).max(5),
    networkExpansion: z.number().min(1).max(5),
  }).optional(),
  overallScore: z.number().min(1).max(5).optional(),
  confidence: z.number().min(0.1).max(1.0).optional(),
  notes: z.string().optional(),
});

// Schema for Mermaid diagrams
const mermaidSchema = z.object({
  type: z.enum(['flowchart', 'mindmap', 'timeline', 'impact-flow', 'sequence', 'gantt']),
  title: z.string(),
  diagram: z.string(),
  theme: z.enum(['default', 'dark', 'neutral']).default('default'),
  responsive: z.boolean().default(true),
  exportable: z.boolean().default(true),
});

// Schema for action items generated from insights
const actionItemSchema = z.object({
  title: z.string(),
  description: z.string(),
  priority: z.enum(['low', 'medium', 'high', 'urgent']),
  category: z.string(),
  estimatedHours: z.number().optional(),
  deadline: z.date().optional(),
  dependencies: z.array(z.string()).optional(),
  status: z.enum(['pending', 'in-progress', 'completed', 'cancelled']).default('pending'),
});

// Main insights collection schema
const insightsCollection = defineCollection({
  type: 'content',
  schema: z.object({
    // Basic metadata
    title: z.string(),
    description: z.string().optional(),
    date: z.date(),
    lastModified: z.date().optional(),

    // Exhibition and categorization
    exhibition: z.string(),
    location: z.string().optional(),
    category: z.array(z.string()),
    tags: z.array(z.string()).optional(),

    // Content processing metadata
    inputType: z.enum(['audio', 'memo', 'structured', 'interview']).optional(),
    originalSource: z.string().optional(),
    processingDate: z.date().optional(),
    confidence: z.number().min(0.1).max(1.0).optional(),

    // Visual content
    thumbnail: z.string().optional(), // Generated by Imagen 4
    images: z.array(z.string()).optional(),
    diagrams: z.array(mermaidSchema).optional(),

    // Analysis and insights
    keyInsights: z.array(z.string()).optional(),
    impact: impactSchema.optional(),
    actionItems: z.array(actionItemSchema).optional(),

    // Relationships and references
    relatedInsights: z.array(z.string()).optional(),
    references: z.array(z.object({
      title: z.string(),
      url: z.string().url(),
      type: z.enum(['website', 'paper', 'book', 'video', 'presentation']),
    })).optional(),

    // Presentation and sharing
    readingTime: z.number().optional(), // in minutes
    featured: z.boolean().default(false),
    published: z.boolean().default(true),
    presentationReady: z.boolean().default(false),

    // AI enhancement metadata
    imageGenerated: z.boolean().default(false),
    diagramGenerated: z.boolean().default(false),
    impactAnalyzed: z.boolean().default(false),
  }),
});

// Weekly reviews collection
const weeklyReviewsCollection = defineCollection({
  type: 'content',
  schema: z.object({
    title: z.string(),
    week: z.string(), // Format: "2025-W40"
    startDate: z.date(),
    endDate: z.date(),

    // Summary statistics
    totalInsights: z.number(),
    newExhibitions: z.array(z.string()),
    topCategories: z.array(z.object({
      name: z.string(),
      count: z.number(),
    })),
    keyThemes: z.array(z.string()),

    // Analysis results
    weeklyHighlights: z.array(z.string()),
    actionItemsGenerated: z.number(),
    presentationsCreated: z.array(z.string()).optional(),

    // Impact summary
    impactSummary: z.object({
      highImpactInsights: z.number(),
      averageConfidence: z.number(),
      implementationPriorities: z.array(z.string()),
    }).optional(),

    // Next week planning
    upcomingExhibitions: z.array(z.string()).optional(),
    focusAreas: z.array(z.string()).optional(),

    published: z.boolean().default(true),
    featured: z.boolean().default(false),
  }),
});

// Categories and configuration
const categoriesCollection = defineCollection({
  type: 'data',
  schema: z.object({
    name: z.string(),
    description: z.string(),
    color: z.string(), // Tailwind color class
    icon: z.string().optional(), // SVG icon or emoji
    parentCategory: z.string().optional(),
    keywords: z.array(z.string()).optional(),
    weight: z.number().default(1), // For sorting and prioritization
  }),
});

// Configuration for impact analysis criteria
const impactConfigCollection = defineCollection({
  type: 'data',
  schema: z.object({
    dimension: z.string(),
    criteria: z.array(z.object({
      name: z.string(),
      description: z.string(),
      weight: z.number().min(0).max(1),
      scoringGuide: z.object({
        1: z.string(),
        2: z.string(),
        3: z.string(),
        4: z.string(),
        5: z.string(),
      }),
    })),
  }),
});

export const collections = {
  insights: insightsCollection,
  'weekly-reviews': weeklyReviewsCollection,
  categories: categoriesCollection,
  'impact-config': impactConfigCollection,
};